q()
install.packages(c("rgl", "Rttf2pt1"))
install.packages(c("rgl", "Rttf2pt1"))
install.packages(c("rgl", "Rttf2pt1"))
install.packages(c("rgl", "Rttf2pt1"))
install.packages(c("rgl", "Rttf2pt1"))
install.packages(c("rgl", "Rttf2pt1"))
install.packages("Rttf2pt1")
install.packages("Rttf2pt1")
install.packages("Rttf2pt1")
remove.packages(extrafont)
install.packages("Rttf2pt1")
install.packages(c("evaluate", "fields", "formatR", "ggplot2", "markdown", "mime", "pillar", "tibble", "zoo"))
install.packages("ggplot2")
install.packages("igraph")
install.packages(c("callr", "digest", "pillar", "processx", "rgl", "rlang", "rmarkdown", "tinytex", "vctrs", "xfun"))
install.packages("readODS")
install.packages("scatterplot3d")
install.packages(c("Rcpp", "xml2"))
source('~/0/Floor/1/t/Writings/Quah-D-2018.12-Bottom-50-Exceptionalism/Data/Economic-Mobility-1.r', echo=TRUE)
fonts()
# Economic-Mobility-1.r
# @(#) by Danny Quah 2019.07.23 0700h
#
library(readxl)
library(data.table)
library(ggplot2)
library(plot3D)
#
dataBegYear <- 1950
dataEndYear <- 2017
dataPrcYear <- 2016
theYears    <- c(dataBegYear : dataEndYear)
dcdEighties <- c((1980-dataBegYear+1) : (1989-dataBegYear+1))
dcdNineties <- c((1990-dataBegYear+1) : (1999-dataBegYear+1))
dcdNoughts  <- c((2000-dataBegYear+1) : (2009-dataBegYear+1))
dcdTens     <- c((2010-dataBegYear+1) : (dataPrcYear-dataBegYear+1))
eightiesOn  <- c((1980-dataBegYear+1) : (dataPrcYear-dataBegYear+1))
#
PAI.file <- "2019.05-WID-Per-Adult-Income-All-DQ-WID_Data_13052019-122959.xlsx"
B50.file <- "2019.05-WID-Income-All-B50-DQ-WID_Data_13052019-122443.xlsx"
T10.file <- "2019.05-WID-Income-All-T10-DQ-WID_Data_13052019-122257.xlsx"
T01.file <- "2019.05-WID-Income-All-T01-DQ-WID_Data_13052019-122010.xlsx"
# Custom function
myLongGrowthRate <- function(theVector) {
# My best estimate of long-run growth rate (percent)
# from the longest possible log-difference
nonNA.indexes <- which(!is.na(theVector))
if (length(nonNA.indexes) <= 1) {
theLongGrowthRate <- NA
}
else {
first <- nonNA.indexes[1]
last  <- nonNA.indexes[length(nonNA.indexes)]
theLongGrowthRate <- log(theVector[last] / theVector[first]) / (last - first)
}
return(100 * theLongGrowthRate)
}
##
# Execution begins
##
tmp.df <- read_excel(PAI.file, sheet=1, col_names=FALSE, trim_ws=TRUE)
tmp.df <- t(tmp.df[-1,-2]) # first row headers, second col original variable name
colnames.tmp <- make.names(tmp.df[1,], unique=TRUE) ; tmp.df <- tmp.df[-1,]
# make the data numeric and push into data.table
PAI.dt <- as.data.table(data.matrix(as.data.frame(tmp.df, stringsAsFactors=FALSE)))
colnames(PAI.dt) <- colnames.tmp
rownames(PAI.dt) <- c(dataBegYear:dataEndYear)
tmp.df <- read_excel(B50.file, sheet=1, col_names=FALSE, trim_ws=TRUE)
lastColNdx <- ncol(tmp.df) + max(dataEndYear - dataPrcYear, 0)
tmp.df[, lastColNdx] <- NA
tmp.df <- t(tmp.df[-1,-2]) # first row headers, second col original variable name
colnames.tmp <- make.names(tmp.df[1,], unique=TRUE) ; tmp.df <- tmp.df[-1,]
# make the data numeric and push into data.table
B50.dt <- as.data.table(data.matrix(as.data.frame(tmp.df, stringsAsFactors=FALSE)))
colnames(B50.dt) <- colnames.tmp
rownames(B50.dt) <- c(dataBegYear:dataEndYear)
tmp.df <- read_excel(T10.file, sheet=1, col_names=FALSE, trim_ws=TRUE)
lastColNdx <- ncol(tmp.df) + max(dataEndYear - dataPrcYear, 0)
tmp.df[, lastColNdx] <- NA
tmp.df <- t(tmp.df[-1,-2]) # first row headers, second col original variable name
colnames.tmp <- make.names(tmp.df[1,], unique=TRUE) ; tmp.df <- tmp.df[-1,]
# make the data numeric and push into data.table
T10.dt <- as.data.table(data.matrix(as.data.frame(tmp.df, stringsAsFactors=FALSE)))
colnames(T10.dt) <- colnames.tmp
rownames(T10.dt) <- c(dataBegYear:dataEndYear)
tmp.df <- read_excel(T01.file, sheet=1, col_names=FALSE, trim_ws=TRUE)
lastColNdx <- ncol(tmp.df) + max(dataEndYear - dataPrcYear, 0)
tmp.df[, lastColNdx] <- NA
tmp.df <- t(tmp.df[-1,-2]) # first row headers, second col original variable name
colnames.tmp <- make.names(tmp.df[1,], unique=TRUE) ; tmp.df <- tmp.df[-1,]
# make the data numeric and push into data.table
T01.dt <- as.data.table(data.matrix(as.data.frame(tmp.df, stringsAsFactors=FALSE)))
colnames(T01.dt) <- colnames.tmp
rownames(T01.dt) <- c(dataBegYear:dataEndYear)
rm(tmp.df, colnames.tmp, T01.file, T10.file, B50.file, PAI.file)
##
# Measures of interest
##
# Per adult income is all ready to go
# PAI.dt
# Average B50 income
avg.B50.dt     <- B50.dt * PAI.dt / 0.5
# Rich-poor separation
avg.T10.dt     <- T10.dt * PAI.dt / 0.1
rps.T10.B50.dt <- (T10.dt * PAI.dt / 0.1) - avg.B50.dt
rownames(avg.B50.dt) <- rownames(PAI.dt)
rownames(rps.T10.B50.dt) <- rownames(PAI.dt)
# Plots
theDecade <- dcdNoughts # Change this according to the "decades" setting as needed
M.df <- data.frame (econ   = colnames(PAI.dt),
rps.gr = t(as.matrix(rps.T10.B50.dt[theDecade, lapply(.SD, myLongGrowthRate)])),
b50.gr = t(as.matrix(avg.B50.dt[theDecade, lapply(.SD, myLongGrowthRate)])),
pai.gr = t(as.matrix(PAI.dt[theDecade, lapply(.SD, myLongGrowthRate)])),
stringsAsFactors=FALSE)
b50gr.g2d <- ggplot(data=M.df, aes(pai.gr, b50.gr)) +
geom_point(shape=19, alpha=1/4) + geom_smooth(method=lm) +
ggtitle("Growth in the bottom half's average income and\n\t in the economy: from 2000 on") +
labs(x="Growth in the economy", y="Growth, average income of the bottom 50%") +
theme_minimal()
rpsgr.g2d <- ggplot(data=M.df, aes(pai.gr, rps.gr)) +
geom_point(shape=19, alpha=1/4) + geom_smooth(method=lm) +
ggtitle("Increase in rich-poor separation and\ngrowth in the economy: from 2000 on") +
labs(x="Growth in the economy", y="Increase in separation between average top 10% and bottom 50%") +
theme_minimal()
rpsb5.g2d <- ggplot(data=M.df, aes(b50.gr, rps.gr)) +
geom_point(shape=19, alpha=1/4) + geom_smooth(method=lm) +
ggtitle("\t Increase in rich-poor separation and\ngrowth in the bottom half's average income: from 2000 on") +
labs(x="Growth, average income of the bottom 50%", y="Increase in separation between average top 10% and bottom 50%") +
theme_minimal()
scatter3D(M.df$pai.gr, M.df$b50.gr, M.df$rps.gr, colvar=NULL, col="black",
main="Growth, mobility, inequality: from 2000 on",
bty='f',  # 'b2' backpanel and gridlines, 'f' fullbox, 'n' nobox
# 'b' default - backpanels only
ticktype='detailed', # or 'simple'
theta=25, # azimuthal (in degrees), default 40
phi=30,   # co-latitude (in degrees), default 40
xlab="Growth in the economy",
ylab="Growth, average income of bottom 50%",
zlab="Increase, rich-poor separation",
pch=19,   # pointshapes
cex=0.5   # pointsize
)
b50gr.g2d
rpsgr.g2d
rpsb5.g2d
##
# Tabulations
M.dt <- setDT(M.df)
M.dt[b50.gr > 0.0  & pai.gr <= 0.0]
M.dt[b50.gr > 0.0  & pai.gr > 0.0]
M.dt[b50.gr <= 0.0 & pai.gr <= 0.0]
M.dt[b50.gr <= 0.0 & pai.gr > 0.0]
M.dt[rps.gr > 0.0  & pai.gr <= 0.0]
M.dt[rps.gr > 0.0  & pai.gr > 0.0]
M.dt[rps.gr <= 0.0 & pai.gr <= 0.0]
M.dt[rps.gr <= 0.0 & pai.gr > 0.0]
M.dt[rps.gr > 0.0  & b50.gr <= 0.0]
M.dt[rps.gr > 0.0  & b50.gr > 0.0]
M.dt[rps.gr <= 0.0 & b50.gr <= 0.0]
M.dt[rps.gr <= 0.0 & b50.gr > 0.0]
M.dt[b50.gr <= 0.0 & rps.gr > 0.0 & pai.gr <= 0.0]
M.dt[b50.gr <= 0.0 & rps.gr > 0.0 & pai.gr > 0.0]
## Timeseries plot
ndxBegYear <- 1980 - dataBegYear - 1
ndxEndYear <- 2014 - dataBegYear - 1
US.distr.df <- data.frame(avg.B50 = avg.B50.dt$USA, avg.T10 = avg.T10.dt$USA,
stringsAsFactors = FALSE)
FR.distr.df  <- data.frame(avg.B50 = avg.B50.dt$France, avg.T10 = avg.T10.dt$France,
stringsAsFactors = FALSE)
CN.distr.df  <- data.frame(avg.B50 = avg.B50.dt$China, avg.T10 = avg.T10.dt$China,
stringsAsFactors = FALSE)
ggplot(US.distr.df[ndxBegYear:ndxEndYear,],
geom_line(aes(y=avg.B50), colour="blue", size=1, na.rm=TRUE) +
geom_line(aes(y=avg.T10), colour="black", size=2, na.rm=TRUE) +
xlab("Year") + ylab("B50-Average, T10-Average") +
expand_limits (y=0) +
ggtitle("US inequality") +
theme(
plot.title = element_text(font="Calibri", color="black", size=14, face="bold.italic"),
axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold")
)
theme_bw()
geom_line(aes(y=avg.B50), colour="blue", size=1, na.rm=TRUE) +
geom_line(aes(y=avg.T10), colour="black", size=2, na.rm=TRUE) +
xlab("Year") + ylab("B50-Average, T10-Average") +
expand_limits (y=0) +
ggtitle("US inequality") +
theme(
plot.title = element_text(font="Calibri", color="black", size=14, face="bold.italic"),
axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold")
) +
theme_bw()
geom_line(aes(y=avg.B50), colour="blue", size=1, na.rm=TRUE) +
geom_line(aes(y=avg.T10), colour="black", size=2, na.rm=TRUE) +
xlab("Year") + ylab("B50-Average, T10-Average") +
expand_limits (y=0) +
ggtitle("US inequality") +
theme_bw()
ggplot(US.distr.df[ndxBegYear:ndxEndYear,],
aes(x=theYears[ndxBegYear:ndxEndYear])) +
geom_line(aes(y=avg.B50), colour="blue", size=1, na.rm=TRUE) +
geom_line(aes(y=avg.T10), colour="black", size=2, na.rm=TRUE) +
xlab("Year") + ylab("B50-Average, T10-Average") +
expand_limits (y=0) +
ggtitle("US inequality") +
theme(
plot.title = element_text(font="Calibri", color="black", size=14, face="bold.italic"),
axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold")
) +
theme_bw()
source('~/0/Floor/1/t/Writings/Quah-D-2019.08-Mobility-Political-Upheaval-Inequality/Data/Economic-Mobility-1.r', echo=TRUE)
q()
install.packages("igraph")
install.packages(c("backports", "BH", "callr", "caTools", "cli", "data.table", "digest", "ellipsis", "farver", "fields", "hms", "htmltools", "htmlwidgets", "igraph", "knitr", "later", "maptools", "mime", "pillar", "pkgconfig", "plot3D", "plyr", "promises", "purrr", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "rlang", "rmarkdown", "scales", "shiny", "sp", "spam", "tinytex", "vctrs", "webshot", "xfun"))
install.packages(c("htmltools", "plyr", "promises", "scales", "shiny", "spam"))
install.packages(c("htmltools", "plyr", "promises", "scales", "shiny", "spam"))
install.packages(c("htmltools", "plyr", "promises", "scales", "shiny", "spam"))
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("lubridate")
install.packages(c("backports", "callr", "data.table", "devtools", "dplyr", "DT", "fs", "glue", "httr", "IRkernel", "jsonlite", "misc3d", "pkgbuild", "processx", "ps", "remotes", "rvest", "stringi", "sys", "tidyr", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "broom", "callr", "cli", "clipr", "colorspace", "covr", "cpp11", "data.table", "dbplyr", "devtools", "digest", "DT", "generics", "gh", "htmlwidgets", "isoband", "jsonlite", "knitr", "labeling", "lubridate", "magrittr", "openssl", "pbdZMQ", "pillar", "pkgbuild", "processx", "ps", "R6", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "testthat", "tibble", "tinytex", "usethis", "vctrs", "withr", "xfun"))
install.packages("devtools")
install.packages(c("BH", "cpp11", "crosstalk", "data.table", "diffobj", "DT", "ggplot2", "git2r", "hms", "htmltools", "rlang", "xfun"))
install.packages(c("cachem", "dbplyr", "dplyr", "shinyWidgets"))
install.packages(c("crayon", "pbdZMQ"))
library(tidycovid19)
df <- devtools::package_info()
df[df$package == "tidycovid19", ]
df <- download_owid_data()
names(df)
#!/usr/bin/env R
# @(#) covid-base-2021.01.R
# Last-edited: Wed 2021.02.10.1723  -- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Sat 2021.01.30.1610  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to ...
# ----------------------------------------------------------------
library(RCurl)
library(data.table)
library(countrycode)
library(ggthemes)
library(tidyverse)
## remotes::install_github("joachim-gassen/tidycovid19")
library(tidycovid19)
source("./dl_owid_covid_data.R", echo = FALSE)
theOWID.dt <- dl_owid_covid_data(cached = FALSE, silent = FALSE,
readOnline = TRUE)
theOWID.dt <- theOWID.dt %>%
setwd("~/0/Light/1/j/Code/COVID19-Base-2021.01")
setwd("~/0/Light/1/j/Code/COVID19-Base-2021.01")
source("./dl_owid_covid_data.R", echo = FALSE)
theOWID.dt <- dl_owid_covid_data(cached = FALSE, silent = FALSE,
readOnline = TRUE)
names(theOWID.dt)
