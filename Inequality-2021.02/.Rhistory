library(data.table)
library(lubridate)
library(countrycode)
library(imfr)
library(tidyverse)
library(zoo)
library(ggthemes)
# My call conventions given in World-Economies-2021.01.R
################################################################
## Get in the data #############################################
################################################################
# Drawing from IMF WEO database, not available online at
# the usual IMF API. I downloaded the xls from
# https://www.imf.org/en/Publications/WEO/weo-database/2020/October/download-entire-database
# and converted the .xls to .csv. Now I can use them from my
# GitHub or locally
readOnline <- FALSE
if (!readOnline) {
# If local ####################################################
localDataPath <- file.path("~", "0", "Light", "1", "j", "Data-Cloud", "IMF-WEO")
myWEOlocalFile <- file.path(localDataPath, "WEOOct2020all.csv")
myWEOeconomies.df <- read.csv(myWEOlocalFile,
stringsAsFactors = FALSE, na.strings = c("n/a", "--", ""))
myWEOlocalFile <- file.path(localDataPath, "WEOOct2020alla.csv")
myWEOeconGrps.df <- read.csv(myWEOlocalFile,
stringsAsFactors = FALSE, na.strings = c("n/a", "--", ""))
} else {
# If online ####################################################
myDataCloudHeader <- "https://raw.githubusercontent.com/DannyQuah/Data-Cloud/main/"
myWEO.url <- getURL(paste0(myDataCloudHeader, "IMF-WEO/WEOOct2020all.csv"))
myWEOeconomies.df <- read.csv(text = myWEO.url,
stringsAsFactors = FALSE, na.strings = c("n/a", "--", ""))
myWEO.url <- getURL(paste0(myDataCloudHeader, "IMF-WEO/WEOOct2020alla.csv"))
myWEOeconGrps.df <- read.csv(text = myWEO.url,
stringsAsFactors = FALSE, na.strings = c("n/a", "--", ""))
}
# Reference Codebooks
# // different for single economies and for economy groupings
myEconomiesRefCodes <- myWEOeconomies.df %>% select(WEO.Subject.Code,
Subject.Descriptor, Units, Scale, Subject.Notes) %>%
drop_na(WEO.Subject.Code) %>% distinct()
# Not the same for economy groupings
myEconGrpsRefCodes <- myWEOeconGrps.df %>% select(WEO.Subject.Code,
Subject.Descriptor, Units, Scale, Subject.Notes,
Country.Series.specific.Notes) %>%
drop_na(WEO.Subject.Code) %>% distinct()
# Make Country.Group.Name / WEO.Country.Group.Code concordance
# for reference as well
myEconGrpsNamesCodes <- myWEOeconGrps.df %>%
select(Country.Group.Name, WEO.Country.Group.Code) %>%
drop_na(Country.Group.Name) %>% distinct()
# Clean data, move into data tables
# Take out Units, Scale, Estimates.Start.After as well,
# as otherwise pivot_wider will use those as additional
# way to categorise the observations
myWEOeconomies.dt <- setDT(myWEOeconomies.df) %>%
select(-c(WEO.Country.Code, Subject.Descriptor, Subject.Notes,
Country.Series.specific.Notes, Units, Scale,
Estimates.Start.After)) %>%
mutate_at(vars(starts_with("X")), as.numeric)
# Economies have ISO but economic groups (appropriately enough) don't.
# So need to keep the identifier WEO.Country.Group.Code
myWEOeconGrps.dt <- setDT(myWEOeconGrps.df) %>%
select(-c(Subject.Descriptor, Subject.Notes,
Country.Series.specific.Notes, Units, Scale,
Estimates.Start.After)) %>%
mutate_at(vars(starts_with("X")), as.numeric)
# Reshape into tidy data
myWEOeconomies.dt <- myWEOeconomies.dt %>%
pivot_longer(cols = starts_with("X"),
names_to = "year", names_prefix = "X",
names_transform = list(year = as.integer),
values_to = "value", values_drop_na = TRUE)
myWEOeconomies.dt <- myWEOeconomies.dt %>%
pivot_wider(names_from = WEO.Subject.Code, values_from = value)
myWEOeconGrps.dt <- myWEOeconGrps.dt %>%
pivot_longer(cols = starts_with("X"),
names_to = "year", names_prefix = "X",
names_transform = list(year = as.integer),
values_to = "value", values_drop_na = TRUE)
myWEOeconGrps.dt <- myWEOeconGrps.dt %>%
pivot_wider(names_from = WEO.Subject.Code, values_from = value)
## Not strictly necessary, but easier to scan
## sort years within economies
myWEOeconomies.dt <- myWEOeconomies.dt %>%
group_by(ISO) %>% arrange(year, .by_group = TRUE)
myWEOeconGrps.dt <- myWEOeconGrps.dt %>%
group_by(WEO.Country.Group.Code) %>% arrange(year, .by_group = TRUE)
## Output selected groups and economies
myWEOeconGroups <- c("World", "Advanced economies",
"ASEAN-5", "European Union",
"Emerging market and developing economies")
myWEOeconGrps.dt %>%
filter(Country.Group.Name %in% myCountryGroups) %>%
select(Country.Group.Name, year, NGDP_RPCHMK) %>%
ggplot(., aes(x = year, y = NGDP_RPCHMK)) +
geom_line(aes(group = Country.Group.Name), colour="grey50") +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
myWEOeconISO <- c("USA", "CHN", "SGP")
myWEOeconomies.dt %>%
filter(ISO %in% myWEOeconISO) %>%
select(Country, year, NGDP_RPCH) %>%
ggplot(., aes(x = year, y = NGDP_RPCH)) +
geom_line(aes(group = Country, colour = Country)) +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
myWEOeconGrps.dt %>%
filter(Country.Group.Name %in% myWEOeconGroups) %>%
select(Country.Group.Name, year, NGDP_RPCHMK) %>%
ggplot(., aes(x = year, y = NGDP_RPCHMK)) +
geom_line(aes(group = Country.Group.Name), colour="grey50") +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
myWEOeconISO <- c("USA", "CHN", "SGP")
myWEOeconomies.dt %>%
filter(ISO %in% myWEOeconISO) %>%
select(Country, year, NGDP_RPCH) %>%
ggplot(., aes(x = year, y = NGDP_RPCH)) +
geom_line(aes(group = Country, colour = Country)) +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
View(myWEOeconGrps.dt)
View(myEconGrpsNamesCodes)
View(myEconGrpsRefCodes)
myWEOeconGrps.dt %>%
filter(Country.Group.Name %in% myWEOeconGroups) %>%
select(Country.Group.Name, year, NGDP_RPCH) %>%
ggplot(., aes(x = year, y = NGDP_RPCH)) +
geom_line(aes(group = Country.Group.Name), colour="grey50") +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
myWEOeconGrps.dt %>%
filter(Country.Group.Name %in% myWEOeconGroups) %>%
select(Country.Group.Name, year, NGDP_RPCH) %>%
ggplot(., aes(x = year, y = NGDP_RPCH)) +
geom_line(aes(group = Country.Group.Name),
colour = Country.Group.Name) +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
myWEOeconGrps.dt %>%
filter(Country.Group.Name %in% myWEOeconGroups) %>%
select(Country.Group.Name, year, NGDP_RPCH) %>%
ggplot(., aes(x = year, y = NGDP_RPCH)) +
geom_line(aes(group = Country.Group.Name,
colour = Country.Group.Name)) +
geom_point() +
labs(title = "Economic growth", y = "%") +
theme_economist(base_size = 14)
View(myWEOeconomies.df)
View(myWEOeconomies.df)
View(myWEOeconomies.dt)
install.packages(c("brio", "broom", "coronavirus", "cpp11", "crayon", "DBI", "dplyr", "fansi", "fastmap", "forcats", "gert", "ggrepel", "ggthemes", "htmltools", "knitr", "memoise", "rappdirs", "Rcpp", "reprex", "shiny", "shinyWidgets", "tibble", "tinytex", "withr"))
install.packages("remotes")
#!/usr/bin/env R
# @(#) covid-base-2021.01.R
# Last-edited: Sat 2021.01.30.1737  -- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Sat 2021.01.30.1610  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to ...
# ----------------------------------------------------------------
library(tidyverse)
library(lubridate)
remotes::install_github("joachim-gassen/tidycovid19")
## remotes::install_github("joachim-gassen/tidycovid19")
library(tidycovid19)
theOWID.df <- download_owid_data(cached = TRUE)
View(theOWID.df)
#!/usr/bin/env R
# @(#) singapore-b50t10.R
# Last-edited: Tue 2021.02.02.1616  -- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Tue 2021.02.02.1356  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to ...
# ----------------------------------------------------------------
library(tidyverse)
library(lubridate)
rawData.df <- read.csv("../../Data-Cloud/WID/Singapore-b50t10.csv",
sep = ";")
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cli", "rappdirs"))
install.packages(c("cachem", "crayon", "dbplyr", "dplyr", "shinyWidgets"))
library(tidycovid19)
df <- devtools::package_info()
df[df$package == "tidycovid19", ]
df<-download_owid_data()
names(df)
#!/usr/bin/env R
# @(#) inequality-mobility-2021.02.R
# Last-edited: Sun 2021.02.14.1742-- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Fri 2021.02.12.1733  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to analyse inequality and social mobility
#    directly in cloud data
# ----------------------------------------------------------------
library(data.table)
library(countrycode)
library(ggthemes)
library(tidyverse)
library(lubridate)
## remotes::install_github("WIDworld/wid-r-tool")
library(wid)
source("./dl_wid_data.R", echo = FALSE)
# In dl_wid_data() call, these "use*" arguments are used only
# when cached is FALSE and readOnline is TRUE so we're pulling
# from the source.
# Use LCU/USD for longest timeseries (EUR doesn't go back far enough)
useAreas      <- c("CN", "SG", "US")
useYears      <- 1980:2019
theWIDdata.dt <- dl_wid_data(silent = FALSE, cached = FALSE,
readOnline = TRUE, theAreas = useAreas, theYears = useYears)
theWIDdata.dt <- theWIDdata.dt %>%
#!/usr/bin/env R
# @(#) inequality-mobility-2021.02.R
# Last-edited: Sun 2021.02.14.1742-- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Fri 2021.02.12.1733  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to analyse inequality and social mobility
#    directly in cloud data
# ----------------------------------------------------------------
library(data.table)
library(countrycode)
library(ggthemes)
library(tidyverse)
library(lubridate)
## remotes::install_github("WIDworld/wid-r-tool")
library(wid)
source("./dl_wid_data.R", echo = FALSE)
# In dl_wid_data() call, these "use*" arguments are used only
# when cached is FALSE and readOnline is TRUE so we're pulling
# from the source.
# Use LCU/USD for longest timeseries (EUR doesn't go back far enough)
useAreas      <- c("CN", "SG", "US")
useYears      <- 1980:2019
theWIDdata.dt <- dl_wid_data(silent = FALSE, cached = FALSE,
readOnline = TRUE, theAreas = useAreas, theYears = useYears)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgNIusd = avgNatlIncome / exchRateUS) %>%
mutate(aveB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(aveT10c  = shrT10 * avgNIusd / 0.1)
setwd("~/0/Light/1/j/Code/Inequality-2021.02")
#!/usr/bin/env R
# @(#) inequality-mobility-2021.02.R
# Last-edited: Sun 2021.02.14.1742-- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Fri 2021.02.12.1733  -- Danny Quah (me@DannyQuah.com)
#    First draft: R script to analyse inequality and social mobility
#    directly in cloud data
# ----------------------------------------------------------------
library(data.table)
library(countrycode)
library(ggthemes)
library(tidyverse)
library(lubridate)
## remotes::install_github("WIDworld/wid-r-tool")
library(wid)
source("./dl_wid_data.R", echo = FALSE)
# In dl_wid_data() call, these "use*" arguments are used only
# when cached is FALSE and readOnline is TRUE so we're pulling
# from the source.
# Use LCU/USD for longest timeseries (EUR doesn't go back far enough)
useAreas      <- c("CN", "SG", "US")
useYears      <- 1980:2019
theWIDdata.dt <- dl_wid_data(silent = FALSE, cached = FALSE,
readOnline = TRUE, theAreas = useAreas, theYears = useYears)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgNIusd = avgNatlIncome / exchRateUS) %>%
mutate(aveB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(aveT10c  = shrT10 * avgNIusd / 0.1)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgNIusd = avgNatlInc / exchRateUS) %>%
mutate(aveB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(aveT10c  = shrT10 * avgNIusd / 0.1)
View(theWIDdata.dt)
tmpData.dt <- theWIDdata.dt %>% theWIDdata.dt$economy == "SG"
tmpData.dt <- theWIDdata.dt %>% filter(economy == "SG")
View(tmpData.dt)
tmpData.dt %>% ggplot(., aes(x=year, y=aveB50c)) + theme_economist(base_size=14)
tmpData.dt %>% ggplot(., aes(x=year, y=aveB50c)) + + geom_line() + theme_economist(base_size=14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = aveB50c)) +
geom_line(color=blue) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = aveB50c)) +
geom_line(color=economy) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = aveB50c)) +
geom_line(color=economy) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = aveB50c)) +
geom_line(color="blue") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = c(aveB50c, aveB50))) +
geom_line(color="blue") +
theme_economist(base_size = 14)
remove(aveB50c, aveT10c)
theWIDdata.dt <- theWIDdata.dt %>% select(-c(aveB50c, aveT10c))
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgNIusd = avgNatlInc / exchRateUS) %>%
mutate(avgB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(avgT10c  = shrT10 * avgNIusd / 0.1)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = c(aveB50c, aveB50))) +
geom_line(color="blue") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = c(avgB50c, avgB50))) +
geom_line(color="blue") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = c(avgB50c, avgB50))) +
geom_line() +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year, y = avgB50c)) +
geom_line() +
theme_economist(base_size = 14)
vignette(wid_demo)
vignette(wid-demo)
vignette("wid-demo")
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "steelblue", linetype="twodash") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "US") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "steelblue", linetype="twodash") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "CN") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "darkblue", linetype="dash") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "CN") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "blue", linetype="dash") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "CN") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "steelblue", linetype="dash") +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == "CN") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred") +
geom_line(aes(y = avgB50), color = "steelblue", linetype="twodash") +
theme_economist(base_size = 14)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgNIusd = avgNatlInc / exchRateUS) %>%
mutate(avgB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(avgT10c  = shrT10 * avgNIusd / 0.1) %>%
mutate(ineqQ    = avgT10c - avgB50c) %>%
mutate(ineqq    = ineqQ / avgB50c)
theWIDdata.dt %>%
filter(economy == "SG") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "steelblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theEconomy <- "SG"
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy) +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy, y = "USD") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theWIDdata.dt <- dl_wid_data(silent = FALSE, cached = FALSE,
readOnline = TRUE, theAreas = useAreas, theYears = useYears)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgB50d  = avgB50 / (1000 * exchRateUS)) %>%
mutate(trhB50d  = trhB50 / (1000 * exchRateUS)) %>%
mutate(avgT10d  = avgT10 / (1000 * exchRateUS)) %>%
mutate(trhT10d  = trhT10 / (1000 * exchRateUS)) %>%
mutate(avgNIusd = avgNatlInc / (1000 * exchRateUS)) %>%
mutate(avgB50c  = shrB50 * avgNIusd / (1000 * 0.5)) %>%
mutate(avgT10c  = shrT10 * avgNIusd / (1000 * 0.1)) %>%
mutate(ineqQ    = avgT10c - avgB50c) %>%
mutate(ineqq    = ineqQ / avgB50c)
theWIDdata.dt %>%
filter(economy == "US") %>%
ggplot(., aes(x = year)) +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = avgB50), color = "steelblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theEconomy <- "SG"
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy, y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theWIDdata.dt <- dl_wid_data(silent = FALSE, cached = FALSE,
readOnline = TRUE, theAreas = useAreas, theYears = useYears)
theWIDdata.dt <- theWIDdata.dt %>%
mutate(avgB50d  = avgB50 / (1000 * exchRateUS)) %>%
mutate(trhB50d  = trhB50 / (1000 * exchRateUS)) %>%
mutate(avgT10d  = avgT10 / (1000 * exchRateUS)) %>%
mutate(trhT10d  = trhT10 / (1000 * exchRateUS)) %>%
mutate(avgNIusd = avgNatlInc / (1000 * exchRateUS)) %>%
mutate(avgB50c  = shrB50 * avgNIusd / 0.5) %>%
mutate(avgT10c  = shrT10 * avgNIusd / 0.1) %>%
mutate(ineqQ    = avgT10c - avgB50c) %>%
mutate(ineqq    = ineqQ / avgB50c)
theEconomy <- "SG"
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy, y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theEconomy <- "US"
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy, y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theEconomy <- "CN"
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = theEconomy, y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = paste0(theEconomy, " - Inequality, B50"),
y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
geom_line(aes(y = ineqQ), color = "darkblue",
linetype = "longdash", size = 1.5) +
theme_economist(base_size = 14)
theWIDdata.dt %>%
filter(economy == theEconomy) %>%
ggplot(., aes(x = year)) +
labs(title = paste0(theEconomy, " - B50"),
y = "USDx10^3") +
geom_line(aes(y = avgB50c), color = "darkred",
linetype = "solid", size = 1.5) +
theme_economist(base_size = 14)
